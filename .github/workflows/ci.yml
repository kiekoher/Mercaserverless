name: CI/CD Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  schedule:
    - cron: '0 5 * * 1'

jobs:
  audit:
    name: "Audit Dependencies"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'
      - name: Install dependencies
        run: npm ci
      - name: Run npm audit
        run: npm audit --omit=dev --audit-level=high
      - name: Check outdated dependencies
        run: npm outdated || true
      - name: Run Semgrep SAST
        uses: returntocorp/semgrep-action@v1
        with:
          config: auto
      - name: Ping Cron Monitor on Success
        if: success() && github.event_name == 'schedule'
        run: |
          # This step acts as a "dead man's switch" for the scheduled job.
          # You should create a monitor in a service like Healthchecks.io, Better Uptime, or Cronitor.
          # These services provide a unique URL to ping. If the service doesn't receive a ping
          # within the expected schedule (e.g., once a week), it will trigger an alert.
          # This is critical for detecting silent failures of scheduled tasks.
          #
          # Replace the URL below with the one from your monitoring service.
          # curl -fsS -m 10 --retry 5 "https://hc-ping.com/your-uuid-here" || true
          echo "Simulating ping to cron monitoring service. In a real setup, the curl command above would be used."
  lint:
    name: "Lint Code"
    runs-on: ubuntu-latest
    needs: audit
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'
      - name: Install dependencies
        run: npm ci
      - name: Run ESLint
        run: npm run lint

  jest-tests:
    name: "Run Jest Unit Tests"
    runs-on: ubuntu-latest
    needs: audit
    strategy:
      matrix:
        node-version: [20.x]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      - name: Install dependencies
        run: npm ci
      - name: Run Jest tests
        run: npm test
        env:
          NODE_ENV: test
          NEXT_PUBLIC_SUPABASE_URL: "https://example.supabase.co"
          NEXT_PUBLIC_SUPABASE_ANON_KEY: "example-anon-key"
          SUPABASE_SERVICE_KEY: "example-service-key"
          GEMINI_API_KEY: "example-gemini-key"
          GOOGLE_MAPS_API_KEY: "example-maps-key"
          UPSTASH_REDIS_REST_URL: "https://example-redis.upstash.io"
          UPSTASH_REDIS_REST_TOKEN: "example-rest-token"
          HEALTHCHECK_TOKEN: "test-token"
          LOGTAIL_SOURCE_TOKEN: ""
          RATE_LIMIT_FAIL_OPEN: "true"

  cypress-tests:
    name: "Run Cypress E2E Tests"
    runs-on: ubuntu-latest
    needs: [lint, jest-tests]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'
      - name: Install dependencies
        run: npm ci
      - name: Run Cypress tests
        uses: cypress-io/github-action@v6
        with:
          build: npm run build
          start: npm start
        env:
          NODE_ENV: test
          NEXT_PUBLIC_SUPABASE_URL: "https://example.supabase.co"
          NEXT_PUBLIC_SUPABASE_ANON_KEY: "example-anon-key"
          SUPABASE_SERVICE_KEY: "example-service-key"
          GEMINI_API_KEY: "example-gemini-key"
          GOOGLE_MAPS_API_KEY: "example-maps-key"
          UPSTASH_REDIS_REST_URL: "https://example-redis.upstash.io"
          UPSTASH_REDIS_REST_TOKEN: "example-rest-token"
          HEALTHCHECK_TOKEN: "test-token"
          LOGTAIL_SOURCE_TOKEN: ""
          RATE_LIMIT_FAIL_OPEN: "true"
          NEXT_PUBLIC_BYPASS_AUTH_FOR_TESTS: "true"

